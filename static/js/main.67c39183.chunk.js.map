{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","components/UserList/UserList.js","pages/Home/style.js","pages/Home/Home.js","hooks/usePeopleFetch.js","components/FavoritesList/style.js","components/FavoritesList/FavoritesList.js","pages/Favorites/style.js","pages/Favorites/Favorites.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","FormControlLabel","control","Checkbox","checked","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","users","isLoading","useState","hoveredUserId","setHoveredUserId","choosenUsers","setChosenUsers","brazil","australia","canada","germany","israel","countries","setCountries","useEffect","updateUsers","filter","user","location","country","updateCountries","handleMouseLeave","isUserFavorite","localStorage","JSON","parse","some","userFavor","login","username","map","index","onMouseEnter","handleMouseEnter","onMouseLeave","src","picture","large","alt","name","title","first","last","email","street","number","city","onClick","data","isUserExist","findIndex","push","stringify","splice","clickOnFaforite","IconButton","Home","Content","Header","setUsers","setIsLoading","fetchUsers","a","axios","get","response","results","usePeopleFetch","FavoritesList","clickOnUnFaforite","Favorites","favorUsers","setFavorUsers","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createMuiTheme","palette","type","primary","main","error","CssBaseline","NavBar","setValue","AppBar","position","style","top","Tabs","_e","newValue","aria-label","indicatorColor","textColor","Tab","href","AppRouter","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.67c39183.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div``;\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\n\r\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\r\n  const handleChange = () => {\r\n    onChange && onChange(value);\r\n  };\r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\n\r\nconst UserList = ({ users, isLoading }) => {\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n  const [choosenUsers, setChosenUsers] = useState([]);\r\n  const [countries, setCountries] = useState({\r\n    brazil: false,\r\n    australia: false,\r\n    canada: false,\r\n    germany: false,\r\n    israel: false,\r\n  });\r\n\r\n  const { brazil, australia, canada, germany, israel } = countries;\r\n  useEffect(() => {\r\n    setChosenUsers(users);\r\n  }, [users]);\r\n\r\n  useEffect(() => {\r\n    if (!brazil && !australia && !canada && !germany && !israel) {\r\n      return setChosenUsers(users);\r\n    }\r\n    const updateUsers = users.filter((user) => {\r\n      if (user.location.country === \"Brazil\" && brazil) {\r\n        return user;\r\n      }\r\n      if (user.location.country === \"Australia\" && australia) {\r\n        return user;\r\n      }\r\n      if (user.location.country === \"Canada\" && canada) {\r\n        return user;\r\n      }\r\n      if (user.location.country === \"Germany\" && germany) {\r\n        return user;\r\n      }\r\n      if (user.location.country === \"Israel\" && israel) {\r\n        return user;\r\n      }\r\n    });\r\n    setChosenUsers(updateUsers);\r\n  }, [countries]);\r\n\r\n  const updateCountries = (country) => {\r\n    switch (country) {\r\n      case \"BR\":\r\n        setCountries({ ...countries, brazil: !brazil });\r\n        break;\r\n      case \"AU\":\r\n        setCountries({ ...countries, australia: !australia });\r\n        break;\r\n      case \"CA\":\r\n        setCountries({ ...countries, canada: !canada });\r\n        break;\r\n      case \"DE\":\r\n        setCountries({ ...countries, germany: !germany });\r\n        break;\r\n      case \"IL\":\r\n        setCountries({ ...countries, israel: !israel });\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleMouseEnter = (index) => {\r\n    setHoveredUserId(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n\r\n  const clickOnFaforite = (user,index) => {\r\n    if (localStorage[\"usersFavor\"]) {\r\n      const data = JSON.parse(localStorage[\"usersFavor\"]);\r\n      let isUserExist = data.findIndex(\r\n        (userFavor) => userFavor.login.username === user.login.username\r\n      );\r\n      if (isUserExist == -1) {\r\n        data.push(user);\r\n        localStorage[\"usersFavor\"] = JSON.stringify(data);\r\n        setHoveredUserId(index)  \r\n      } else {\r\n        data.splice(isUserExist, 1);\r\n        localStorage[\"usersFavor\"] = JSON.stringify(data);\r\n        setHoveredUserId()\r\n      }\r\n    } else {\r\n      const data = [];\r\n      data.push(user);\r\n      localStorage[\"usersFavor\"] = JSON.stringify(data);\r\n    }\r\n  };\r\n\r\n  const isUserFavorite = (user) => {\r\n    if (localStorage[\"usersFavor\"]) {\r\n      const data = JSON.parse(localStorage[\"usersFavor\"]);\r\n      return data.some((userFavor) => user.login.username == userFavor.login.username);\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <S.UserList>\r\n      <S.Filters>\r\n        <CheckBox\r\n          value=\"BR\"\r\n          label=\"Brazil\"\r\n          isChecked={brazil}\r\n          onChange={updateCountries}\r\n        />\r\n        <CheckBox\r\n          value=\"AU\"\r\n          label=\"Australia\"\r\n          isChecked={australia}\r\n          onChange={updateCountries}\r\n        />\r\n        <CheckBox\r\n          value=\"CA\"\r\n          label=\"Canada\"\r\n          isChecked={canada}\r\n          onChange={updateCountries}\r\n        />\r\n        <CheckBox\r\n          value=\"DE\"\r\n          label=\"Germany\"\r\n          isChecked={germany}\r\n          onChange={updateCountries}\r\n        />\r\n        <CheckBox\r\n          value=\"IL\"\r\n          label=\"Israel\"\r\n          isChecked={israel}\r\n          onChange={updateCountries}\r\n        />\r\n      </S.Filters>\r\n      <S.List>\r\n        {choosenUsers.map((user, index) => {\r\n          return (\r\n            <S.User\r\n              key={index}\r\n              onMouseEnter={() => handleMouseEnter(index)}\r\n              onMouseLeave={handleMouseLeave}\r\n            >\r\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n              <S.UserInfo>\r\n                <Text size=\"22px\" bold>\r\n                  {user?.name.title} {user?.name.first} {user?.name.last}\r\n                </Text>\r\n                <Text size=\"14px\">{user?.email}</Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.street.number} {user?.location.street.name}\r\n                </Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.city} {user?.location.country}\r\n                </Text>\r\n              </S.UserInfo>\r\n              <S.IconButtonWrapper\r\n                isVisible={index === hoveredUserId || isUserFavorite(user)}\r\n                onClick={() => clickOnFaforite(user,index)}\r\n              >\r\n                <IconButton>\r\n                  <FavoriteIcon color=\"error\" />\r\n                </IconButton>\r\n              </S.IconButtonWrapper>\r\n            </S.User>\r\n          );\r\n        })}\r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport * as S from \"./style\";\r\n\r\nconst Home = () => {\r\n  const { users, isLoading } = usePeopleFetch();\r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder\r\n          </Text>\r\n        </S.Header>\r\n        <UserList users={users} isLoading={isLoading} />\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const usePeopleFetch = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  async function fetchUsers() {\r\n    setIsLoading(true);\r\n    const response = await axios.get(`https://randomuser.me/api/?results=25&page=1`);\r\n    setIsLoading(false);\r\n    setUsers(response.data.results);\r\n  }\r\n\r\n  return { users, isLoading, fetchUsers };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\n\r\nconst FavoritesList = ({ users, isLoading }) => {\r\n  const [choosenUsers, setChosenUsers] = useState([]);\r\n  const [countries, setCountries] = useState({\r\n    brazil: false,\r\n    australia: false,\r\n    canada: false,\r\n    germany: false,\r\n    israel: false,\r\n  });\r\n\r\n  const { brazil, australia, canada, germany, israel } = countries;\r\n  useEffect(() => {\r\n    setChosenUsers(users);\r\n  }, [users]);\r\n\r\n  useEffect(() => {\r\n    if (!brazil && !australia && !canada && !germany && !israel) {\r\n      return setChosenUsers(users);\r\n    }\r\n    const updateUsers = users.filter((user) => {\r\n      if (user.location.country === \"Brazil\" && brazil) {\r\n        return user;\r\n      }\r\n      if (user.location.country === \"Australia\" && australia) {\r\n        return user;\r\n      }\r\n      if (user.location.country === \"Canada\" && canada) {\r\n        return user;\r\n      }\r\n      if (user.location.country === \"Germany\" && germany) {\r\n        return user;\r\n      }\r\n      if (user.location.country === \"Israel\" && israel) {\r\n        return user;\r\n      }\r\n    });\r\n    setChosenUsers(updateUsers);\r\n  }, [countries]);\r\n\r\n  const updateCountries = (country) => {\r\n    switch (country) {\r\n      case \"BR\":\r\n        setCountries({ ...countries, brazil: !brazil });\r\n        break;\r\n      case \"AU\":\r\n        setCountries({ ...countries, australia: !australia });\r\n        break;\r\n      case \"CA\":\r\n        setCountries({ ...countries, canada: !canada });\r\n        break;\r\n      case \"DE\":\r\n        setCountries({ ...countries, germany: !germany });\r\n        break;\r\n      case \"IL\":\r\n        setCountries({ ...countries, israel: !israel });\r\n        break;\r\n    }\r\n  };\r\n\r\n  const clickOnUnFaforite = (index) => {\r\n      users.splice(index,1);\r\n      localStorage[\"usersFavor\"] = JSON.stringify(users);\r\n      setChosenUsers([...users]);\r\n  };\r\n\r\n  return (\r\n    <S.UserList>\r\n      <S.Filters>\r\n        <CheckBox\r\n          value=\"BR\"\r\n          label=\"Brazil\"\r\n          isChecked={brazil}\r\n          onChange={updateCountries}\r\n        />\r\n        <CheckBox\r\n          value=\"AU\"\r\n          label=\"Australia\"\r\n          isChecked={australia}\r\n          onChange={updateCountries}\r\n        />\r\n        <CheckBox\r\n          value=\"CA\"\r\n          label=\"Canada\"\r\n          isChecked={canada}\r\n          onChange={updateCountries}\r\n        />\r\n        <CheckBox\r\n          value=\"DE\"\r\n          label=\"Germany\"\r\n          isChecked={germany}\r\n          onChange={updateCountries}\r\n        />\r\n        <CheckBox\r\n          value=\"IL\"\r\n          label=\"Israel\"\r\n          isChecked={israel}\r\n          onChange={updateCountries}\r\n        />\r\n      </S.Filters>\r\n      <S.List>\r\n        {choosenUsers.map((user, index) => {\r\n          return (\r\n            <S.User\r\n              key={index}\r\n            >\r\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n              <S.UserInfo>\r\n                <Text size=\"22px\" bold>\r\n                  {user?.name.title} {user?.name.first} {user?.name.last}\r\n                </Text>\r\n                <Text size=\"14px\">{user?.email}</Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.street.number} {user?.location.street.name}\r\n                </Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.city} {user?.location.country}\r\n                </Text>\r\n              </S.UserInfo>\r\n              <S.IconButtonWrapper\r\n                isVisible={true}\r\n                onClick={() => clickOnUnFaforite(index)}\r\n              >\r\n                <IconButton>\r\n                  <FavoriteIcon color=\"error\" />\r\n                </IconButton>\r\n              </S.IconButtonWrapper>\r\n            </S.User>\r\n          );\r\n        })}\r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default FavoritesList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\nimport Text from \"components/Text\";\nimport FavoritesList from \"components/FavoritesList\";\nimport * as S from \"./style\";\n\nconst Favorites = () => {\n  const [favorUsers, setFavorUsers] = useState([]);\n\n\n  useEffect(() => {\n    if (localStorage[\"usersFavor\"]) {\n      const data = JSON.parse(localStorage[\"usersFavor\"]);\n      setFavorUsers(data);\n    }\n  }, []);\n  return (\n    <S.Home>\n      <S.Content>\n        <S.Header>\n          <Text size=\"64px\" bold>\n            PplFinder Favorites\n          </Text>\n        </S.Header>\n        <FavoritesList users={favorUsers} />\n      </S.Content>\n    </S.Home>\n  );\n};\n\nexport default Favorites;\n","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nconst NavBar = () => {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (_e, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <Tab label=\"Home\" index={0} href=\"/\"/>\r\n        <Tab label=\"Favorites\" index={1} href=\"/#/favorites\"/>\r\n       \r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { HashRouter  as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home  , Favorites } from \"pages\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <ThemeProvider>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch> \r\n          <Route exact path=\"/#/favorites/\" component={Favorites} />\r\n          <Route exact path=\"/\" component={Home} />\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}